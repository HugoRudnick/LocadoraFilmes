{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\react-app\\\\src\\\\Components\\\\UsuarioForms.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\nimport useForm from \"./useForm\";\nimport { connect } from 'react-redux';\nimport * as actions from '../Actions/usuarios';\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 230\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 230\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst initialFieldValues = {\n  usuario: '',\n  senha: ''\n};\n\nconst UsuariosForms = ({\n  classes,\n  ...props\n}) => {\n  //validação de campos\n  const validate = (fieldValues = values) => {\n    let temp = {}; // if('usuario' in fieldValues)\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\n    // // if(!fieldValues.senha)\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\n    // if('senha' in fieldValues)\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\n\n    setErrors({ ...temp\n    }); // if(fieldValues == values){\n    //     return Object.values(temp).every(x => x == \"\")\n    // }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(initialFieldValues, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      props.createUsuarios(values, () => {\n        window.alert('Inserted.');\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (props.currentID != 0) setValues({ ...props.usuarioList.find(x => x.id == props.currentID)\n    });\n  }, [props.currentID]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.root,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    Item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"usuario\",\n    variant: \"outlined\",\n    label: \"Usu\\xE1rio\",\n    value: values.usuario,\n    onChange: handleInputChange\n  }, errors.usuario && {\n    error: true,\n    helperText: errors.usuario\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"senha\",\n    variant: \"outlined\",\n    label: \"Senha\",\n    type: \"password\",\n    value: values.senha,\n    onChange: handleInputChange\n  }, errors.senha && {\n    error: true,\n    helperText: errors.senha\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    className: classes.smMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Submit\")))));\n};\n\nconst mapStateToProps = state => ({\n  usuarioList: state.usuario.list\n});\n\nconst mapActionToProps = {\n  createUsuarios: actions.create,\n  updateUsuario: actions.update\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(UsuariosForms));","map":{"version":3,"sources":["C:/Projetos/react-app/src/Components/UsuarioForms.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","useForm","connect","actions","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","usuario","senha","UsuariosForms","classes","props","validate","fieldValues","values","temp","setErrors","setValues","errors","handleInputChange","handleSubmit","e","preventDefault","createUsuarios","window","alert","currentID","usuarioList","find","x","id","error","helperText","mapStateToProps","state","list","mapActionToProps","create","updateUsuario","update"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/usuarios'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    usuario : '',\r\n    senha : ''\r\n}\r\n\r\nconst UsuariosForms = ({ classes, ...props }) => {\r\n\r\n    //validação de campos\r\nconst validate = (fieldValues = values) => {\r\n    let temp = {}\r\n    // if('usuario' in fieldValues)\r\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n    // // if(!fieldValues.senha)\r\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    // if('senha' in fieldValues)\r\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    // if(fieldValues == values){\r\n    //     return Object.values(temp).every(x => x == \"\")\r\n    // }\r\n\r\n}\r\n   \r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange\r\n    } = useForm(initialFieldValues, validate)\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if(validate()){\r\n            props.createUsuarios(values, ()=>{window.alert('Inserted.')})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.currentID != 0)\r\n        setValues({\r\n            ...props.usuarioList.find(x => x.id == props.currentID)\r\n        })\r\n    }, [props.currentID])\r\n\r\n\r\n    return (\r\n    <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n      <Grid container>\r\n        <Grid Item xs ={6}>\r\n            <TextField\r\n                name= \"usuario\"\r\n                variant = \"outlined\"\r\n                label=\"Usuário\"\r\n                value={values.usuario}\r\n                onChange={handleInputChange}\r\n                {...(errors.usuario && { error: true, helperText: errors.usuario })}\r\n                \r\n            />\r\n            <TextField\r\n                name= \"senha\"\r\n                variant = \"outlined\"\r\n                label=\"Senha\"\r\n                type=\"password\"\r\n                value={values.senha}\r\n                onChange={handleInputChange}\r\n                {...(errors.senha && { error: true, helperText: errors.senha })}\r\n            />\r\n            <div>\r\n                <button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className={classes.smMargin}                \r\n                >\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </form>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n    usuarioList: state.usuario.list\r\n})\r\n  \r\n  const mapActionToProps = {\r\n    createUsuarios: actions.create,\r\n    updateUsuario: actions.update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(UsuariosForms));\r\n"]},"metadata":{},"sourceType":"module"}